# -*- coding: utf-8 -*-
"""cleslley_D2_ED1_UDF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WH-Grl9JzXWqDRvCOFaQxBvtkYvFArX8

Aula de Listas aritiméticas com Python ⏰
"""

#len permite saber o comprimento de uma lista.

jogo = ["nome", "online", "nivel", 5, "genero", 100.00, "plataforma", "desenvolvedor"]
len(jogo)

#list
jogo1 = ["Valorant", "online", "ranked", 5, "fps", 0.00, "pc", "riot"]
jogo2 = ["League Of Legends", "online", "ranked", 2, "moba", 0.00, "pc", "riot"]
jogo3 = ["Minecraft", "singleplayer/multiplayer", "sand-box", 10, "moba", 150.00, "console", "Mojang"]
jogo1 + jogo2 + jogo3

#calculator
a = 0
30 * 5 + a - 2

#tipo numérico da variável 'a'

type (a)

#list.append(x)
#Adiciona um item ao fim da lista. Equivalente a a[len(a):] = [x].

#list.extend(iterable)
#Prolonga a lista, adicionando no fim todos os elementos do argumento iterable passado como parâmetro. Equivalente a a[len(a):] = iterable.

#list.insert(i, x)
#Insere um item em uma dada posição. O primeiro argumento é o índice do elemento antes do qual será feita a inserção, assim a.insert(0, x) insere um elemento na frente da lista e a.insert(len(a), x) e equivale a a.append(x).

#list.remove(x)
#Remove o primeiro item encontrado na lista cujo valor é igual a x. Se não existir valor igual, uma exceção ValueError é levantada.

#list.pop([i])
#Remove o item na posição fornecida na lista e retorna. Se nenhum índice for especificado, a.pop() remove e retorna o último item da lista. Levanta um IndexError se a lista estiver vazia ou o índice estiver fora do intervalo da lista.

#list.clear()
#Remove todos os itens de uma lista. Equivalente a del a[:].

#list.index(x[, start[, end]])
#Devolve o índice base-zero do primeiro item cujo valor é igual a x, levantando ValueError se este valor não existe.

#Os argumentos opcionais start e end são interpretados como nas notações de fatiamento e são usados para limitar a busca para uma subsequência específica da lista. O índice retornado é calculado relativo ao começo da sequência inteira e não referente ao argumento start.

#list.count(x)
#Devolve o número de vezes em que x aparece na lista.

#list.sort(*, key=None, reverse=False)
#Ordena os itens na lista (os argumentos podem ser usados para personalizar a ordenação, veja a função sorted() para maiores explicações).

#list.reverse()
#Inverte a ordem dos elementos na lista.

#list.copy()
#Devolve uma cópia rasa da lista. Equivalente a a[:].

#list.append(x)
#Adiciona um item ao fim da lista. Equivalente a a[len(a):] = [x].]
jogo1 = ["Valorant", "online", "ranked", 5, "fps", 0.00, "pc", "riot"]
jogo1[len(jogo1):] = ["player_cleslley"] #Método para adicionar item dentro de uma lista.
print(jogo1)

#list.remove(x)
#Remove o primeiro item encontrado na lista cujo valor é igual a x. Se não existir valor igual, uma exceção ValueError é levantada.
jogo2 = ["League Of Legends", "online", "ranked", 2, "moba", 0.00, "pc", "riot"]
jogo2.remove("riot")
print(jogo2)
jogo2[-1] #Mostra o último elemento

#list.pop([i]) // os cochetes apenas mostram o índice
#Remove o item na posição fornecida na lista e retorna. Se nenhum índice for especificado, a.pop() remove e retorna o último item da lista. Levanta um IndexError se a lista estiver vazia ou o índice estiver fora do intervalo da lista.
jogo3 = ["Minecraft", "singleplayer/multiplayer", "sand-box", 10, "moba", 150.00, "console", "Mojang"]
jogo3.pop(3)
print(jogo3)

#list.clear()
#Remove todos os itens de uma lista. Equivalente a del a[:].
jogo2 = ["League Of Legends", "online", "ranked", 2, "moba", 0.00, "pc", "riot"]
jogo2.clear() #Limpa todo o conteúdo
print(jogo2)